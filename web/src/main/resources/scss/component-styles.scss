@use 'colors';
@use 'z-index';
@use 'header';

.GeoGebraFrame {

	/* CHECKBOX COMPONENT */
	@mixin checkboxBg($color) {
		.background {
			border-color: $color;
			background-color: $color;
		}
	}

	.checkboxPanel {
		display: flex;
		width: fit-content;
		cursor: pointer;
	}

	.checkbox {
		width: 18px;
		height: 18px;
		padding: 3px;
		position: relative;
		cursor: pointer;

		.background {
			width: 18px;
			height: 18px;
			box-sizing: border-box;
			border: 2px solid;
			border-radius: 2px;
			border-color: colors.$black-54;
			background-color: transparent;
			transition: border-color 90ms cubic-bezier(0,0,.2,1) 0ms,background-color 90ms cubic-bezier(0,0,.2,1) 0ms;
		 }

		 .checkmark {
			 position: absolute;
			 left: 5px;
			 top: 5px;
		 }

		&.selected {
			@include checkboxBg(colors.$mow_primary);
		}
	}

	.accented .checkbox.selected {
		@include checkboxBg(colors.$teal-default);
	}

	/* SWITCHER COMPONENT */
	.switch {
		width: 40px;
		height: 24px;
		margin-right: 16px;
		position: relative;
		top: 7px;
		float: right;
		cursor: pointer;

		.track {
			content: "";
			display: inline-block;
			position: relative;
			width: 36px;
			height: 14px;
			border-radius: 15px;
			-webkit-transition: background 0.3s ease;
			transition: background 0.3s ease;
			vertical-align: middle;
		}

		.thumb {
			width: 20px;
			height: 20px;
			position: relative;
			top: -18px;
			border-radius: 50%;
			display: block;
			transition: left 0.3s ease, background 0.3s ease;
		}

		&.on {
			.track {
				background-color: #9ADAEC;
			}
			.thumb {
				left: 16px;
				background-color: #00A8D5;
			}
		}

		&.off {
			.track {
				background-color: #c5c5c5;
			}
			.thumb {
				left: 0px;
				background-color: #f1f1f1;
			}
		}
	}

	/* INPUT TEXT FIELD COMPONENT */
	.inputTextField {
		width: 100%;
		margin-top: 8px;
		margin-bottom: 8px;
		display: inline-block;
		min-height: 68px;

		.inputLabel {
			font-size: 75%;
			color: colors.$text-secondary;
			height: 12px;
			line-height: 100%;
			display: block;
		}

		&.error {
			.inputLabel {
				color: colors.$error;
			}

			.AutoCompleteTextFieldW {
				border-bottom-color: colors.$error;
			}
		}

		.textField {
			margin-top: 8px;
		}

		.AutoCompleteTextFieldW {
			margin-bottom: 7px; // 8 - border
			border-radius: 0px;
			border: none;
			border-bottom: 1px solid colors.$black-42;

			input[type="text"] {
				border: none !important;
				box-shadow: none !important;
				height: 28px; // 20px text container + 8px bottom padding
				margin: 0px;
				padding: 0px 0px 8px 0px;
			}
		}

		.errorLabel {
			color: colors.$error;
			font-size: 75%;
			height: 12px;
			line-height: 100%;
		}

		&.focusState {
			.AutoCompleteTextFieldW {
				margin-bottom: 6px; // 8 - border
				border-bottom-width: 2px;
			}
		}

		&.focusState:not(.error), &.focusState:not(.error):hover {

			.inputLabel {
				color: colors.$teal-default;
			}
			.AutoCompleteTextFieldW {
				border-bottom-color: colors.$teal-default;
			}
		}

		&.hoverState:not(.error) {

			.inputLabel {
				color: colors.$black-87;
			}

			.AutoCompleteTextFieldW {
				border-bottom: 2px solid colors.$black-87;
			}
		}
	}

	// in case the last input field shouldn't have any bottom margin
	.noBottomMarg {
		.inputTextField {
			margin-bottom: 0px;
		}
	}

	.buttonActive {
		position: relative;

		img {
			opacity: 0.54;
		}

		&:hover {
			img {
				opacity: 0.84;
			}
		}
	}

	.buttonInactive {
		position: relative;
		cursor: default;
		img {
			opacity: 0.26;
		}

		&:hover {
			background-color: transparent;
		}
	}

	/* DROPDOWN COMPONENT */
	.dropDownSelectorContainer {
		max-width: 200px;
   }

	.dropDownSelector {
		position: relative;
		height: 64px;

		.titleLabel {
			font-size: 100%;
			width: 100%;
			height: 24px;
			padding-top: 10px;
			white-space: nowrap;
		}

		.selectedOptionLabel {
			font-size: 87.5%;
			height: 20px;
			padding-bottom: 10px;
			color: colors.$black-60;
		}
	}

	.dropDownPopup {
		overflow-y: auto;

		.dropDownElement {
			padding-left: 24px;
			padding-right: 24px;
			line-height: 32px;
		}

		.dropDownElement:hover {
			cursor: pointer;
			background: colors.$black-04;
		}

		.selectedDropDownElement, .selectedDropDownElement:hover {
			background: colors.$black-12;
		}
	}

	.dialogComponent.hasBorder .dialogContent {
		box-sizing: border-box;
		border-top: 1px solid colors.$black-12;
		border-bottom: 1px solid colors.$black-12;
	}

	.dialogComponent {
		z-index: z-index.$z-dialog;
		background-color: white;
		border-radius: 4px;
		box-shadow: 0px 11px 15px -7px rgba(0, 0, 0, 0.2), 0px 24px 38px 3px rgba(0, 0, 0, 0.14), 0px 9px 46px 8px rgba(0,0,0,.12);
		max-width: 500px;
		width: 90%;

		.popupContent {
			height: 100%;
		}

		.dialogMainPanel {
			padding-top: 20px;
			height: calc(100% - 20px);
			overflow: hidden;

			.dialogTitle {
				min-height: 20px;
				font-size: 125%;
				margin-bottom: 20px;
				margin-left: 24px;
				color: colors.$text-primary;
			}

			.dialogContent {
				// 112px = 20px title + 20px margin + 52px button panel
				// NOTE: this needs to be adjusted according what is added to the dialog
				// (e.g. if no buttons do not add button panel height)
				height: calc(100% - 92px);
				padding: 0px 24px;
				overflow-y: auto;
			}

			.dialogBtnPanel {
				display: inline-flex;
				padding: 8px 8px 8px 24px;
				position: relative;
				float: right;
			}
		}
	}

	/** Material Design TEXT BUTTON **/
	.materialTextButton {
		display: inline-block;
		min-width: 64px;
		height: 36px;
		background: transparent;
		color: colors.$mow_primary;
		font-size: 90%;
		letter-spacing: .04em;
		line-height: 36px;
		text-transform: uppercase;
		border-radius: 4px;
		padding: 0px 8px;
		margin-left: 8px;
		cursor: pointer;
		transition: background 280ms cubic-bezier(0.4, 0, 0.2, 1);

		&:hover {
			background: colors.$mow_card_background_hover;
		}

		.gwt-Label {
			text-align: center;
		}

		&.disabled {
			color: colors.$disabled-text-btn-col;

			&:hover {
				background: transparent;
				cursor: default;
			}
		}
	}

	/** Material Design CONTAINED BUTTON **/
	.materialContainedButton {
		@extend .materialTextButton;

		padding: 0px 16px;
		background-color: colors.$mow_primary;
		color: white;
		box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0,0,0,.12);
		transition: box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);

		&:hover {
			background: colors.$mow_primary;
			box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0,0,0,.12);
		}

		&.disabled {
			background-color: colors.$disabled-contained-btn-bg;
			color: colors.$disabled-contained-btn-col;

			&:hover {
				cursor: default;
				background: colors.$disabled-contained-btn-bg;
				box-shadow: none;
			}
		}
	}

	/** Material Design OUTLINED BUTTON **/
	.materialOutlinedButton {
		@extend .materialTextButton;

		border: 1px solid colors.$black-12;
	}

	/** Material TEXT BUTTON used for dialogs negative action **/
	.dialogTextButton {
		@extend .materialTextButton;

		color: colors.$black-54;

		&:hover {
			color: colors.$dialog-text-btn-hover;
			background-color: colors.$selected-menuitem-background;
		}
	}

	/** Material CONTAINED BUTTON used for dialogs positive action **/
	.dialogContainedButton {
		@extend .materialContainedButton;

		box-shadow: none;
	}

   .orDividerComponent {
		display: flex;

		.divider {
			height: 1px;
			background-color: colors.$black-87;
			opacity: 0.12;
			margin: 7px 0px 6px 0px;
			flex-grow: 1;
		}

		.orLbl {
			height: 14px;
			line-height: 14px;
			font-size: 75%;
			margin: 0px 24px;
			flex-basis: auto;
			color: colors.$text-disabled;
			text-transform: uppercase;
		}
	}

	.containedButton {
		cursor: pointer;
		float: left;
		min-width: 64px;
		height: header.$button_height;
		border-radius: 2px;
		background-color: colors.$mow_grey_button;
		transition: header.$button_hover_transition;
		&:hover {
			background-color: colors.$mow_card_background_hover;
		}

		img {
			float: left;
			width: 18px;
			height: 18px;
			padding: 9px 8px 9px 12px;
			opacity: 0.54;
		}

		.gwt-Label {
			float: left;
			padding: 11px 16px 11px 0px;
			text-transform: uppercase;
			font-size: 87.5%; // (=14px)
			line-height: 1;
			color: colors.$text-secondary;
		}
	}

	/** TAB COMPONENT */
	.componentTab {
		width: 100%;
		overflow: hidden;
		.indicator {
			height: 2px;
			width: 90px;
			background-color: colors.$purple-default;
			top: 49px;
			position: relative;
			border-radius: 2px 2px 0 0;
			left: 0px;
			z-index: 1;
			transition: all .25s cubic-bezier(.35,0,.25,1);
		}

		.header {
			border-bottom: 1px solid colors.$black-12;
			.tabBtn {
				min-width: 90px;
				height: 48px;
				border-radius: 2px;
				.gwt-Label {
					height: 20px;
					line-height: 20px;
					margin: 14px 16px;
					text-align: center;
					color: colors.$text-primary;
				}

				&:hover {
					background-color: colors.$purple-default-12;
				}

				&.selected {
					.gwt-Label {
						color: colors.$purple-default;
					}
					&:hover {
						background-color: colors.$white;
					}
				}

				&.ripple:after {
					background-image: radial-gradient(circle, colors.$purple-default 10%, transparent 10.01%);
				}
			}
		}

			.panelContainer {
				position: relative;
				display: inline-flex;
				right: 0px;

				&.transition {
					transition: right 0.25s cubic-bezier(.35,0,.25,1);
				}
			}
	}

	.infoErrorPanel {
		img {
			padding: 28px;
			margin-left: calc(50% - 56px); // (56+2*28)/2=56
			margin-bottom: 16px;
			opacity: 0.54;
			background-color: colors.$mow_white_hover;
			border-radius: 50%;
		}

		.title {
			margin-bottom: 8px;
			color: colors.$text-primary;
			font-size: 100%;
			min-height: 20px;
			line-height: 20px;
			letter-spacing: 0.25px;
			text-align: center;
		}

		.subtext {
			color: colors.$text-secondary;
			font-size: 87%;
			min-height: 20px;
			line-height: 20px;
			text-align: center;
			letter-spacing: 0.2px;
		}

		.dialogContainedButton {
			display: block;
			margin: 24px auto 0 auto;
		}
	}
}